<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAo4+nEHQfrpBUn5/wVJ
        +f8FSfn/BUn5/wZH+f4GR/n+Bkf5/gdC+u0JOvqcCjb6GwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAo2+ioKOfp0CTv6qAg/+t0HQfrtB0L67wdD
        +vUGR/n+CTr6/wVI+f8FSfn/BUn5/wVJ+f8GRfn7CD/63wg++s8JPPq8CTv6ogk5+ocKOPpqCjb6LAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAo3
        +kYJPPq+B0L5+Qwt+/8PD/z/DSj7/wg9+v8LNPv/Cjb6/wVI+f8FSfn/BUj5/wdC+vIIPvrPCTr6lgo3
        +kYKNfsCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAo3+jcJOfqGCT36wQhA
        +t8HQ/rzCEH5+Ao4+v4NIvv/Dw/8/w8P/P8PD/z/Dw/8/w8P/P8PD/z/Dhz8/gwt+5wKNfoIAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAo1+gYKN/o4Cjf6Pwo2
        +iMKNfoOCjn6cwg++s8NKPv+Dw/8/w8P/P8PD/z/Dw/8/w8P/P8PD/z/Dw/8/w4c/P8GR/n/BUj5/whA
        +t8KOPpnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAo2
        +h0KOfp2CTv6pAg9+sYJO/qoCTv6qAo3+/gOGPz/Dw/8/w8P/P8PD/z/Dw/8/w4Z/P8LNPv/B0L6/wg/
        +tkIPfrKB0H66AZF+foHQ/r0CTv6oQo2+hQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        EaMA6hUYAOcMFQDsEZUA7BH/AOwRagAAAAAAAAAAAAAAAAAAAAAAAAAAAOoQPgDsEb8A7BH0AOwR7wDs
        EccA7BFcAAAAAAAAAAAA3yAIAOwR/wDsEfbgVwL/7AAA/+wAAP8A7RJkAOwR/wDrEVgAAAAAAAAAAAAA
        AAAA6hA+AOwRvwDsEfQA7BHvAOwRxwDsEVwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOwAAP/sAAD/7AAA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7AAA/+wAAP/sAAD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7AAA/+wA
        AP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wA
        AP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wA
        AP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wA
        AP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wA
        AP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wA
        AP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wAAP/sAAD/7AAA/+wA
        AP/sAAD/7AAA/+wAAP/sAAD//+AB//wAAB//wAAf+AAD/+AAAf/wAAA/5gAGH/gAA//wgAH//4AQ//8g
        nH//YI9//mrP///q7///8u////R////8f//gYA4HwCAMA4fgCH+P4Aj/j+AI/4/gCP+P4Aj/h+AIf8Ag
        DAPgYA4H//x////8f/8AAAAAAAAAAAAAAAA=
</value>
  </data>
</root>